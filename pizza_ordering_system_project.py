# -*- coding: utf-8 -*-
"""Pizza Ordering System Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-x8W0HzoPzFYZiCuGb3br8uBS2vZosSV
"""

import csv                                                   #importing libraries that we'll use for database system and date time
import datetime


with open("Orders_Database.csv", 'w') as file_csv:           #creating a database for orders
    writer = csv.writer(file_csv)
    writer.writerow(["Time", "Description", "Cost", "Name", "Identity Number", "Credit Card Number","Credit Card Password"])


class Pizza:                                                 #superclass for pizza types
    def get_cost(self):                                      #creating methods for pizza descriptions and pizza prices
        pass
    
    def get_description(self):
        pass


     
class Classic (Pizza):            #subclass for pizza superclass
    def get_description(self):    #using the methods that we created in superclass
      return "Classic Pizza : Ham, Peperoni, Corn, Mozarella, Olives, Mushrooms, Pizza Sauce."

    def get_cost(self):
      return 119.99

class Margherita (Pizza):
    def get_description(self):
       return "Margherita Pizza: Mozarella, Pizza Sauce."

    def get_cost(self):
       return 109.99

class Meat(Pizza):
    def get_description(Pizza):
      return "Meat Pizza: Sausage, Meat, Mushrooms, Olives, Pepper, Mozarella, Pizza Sauce."

    def get_cost(Pizza):
      return 139.99

class BBQ(Pizza):
    def get_description(self):
       return "BBQ Chicken Pizza: Chicken, Mushrooms, Mozarella, BBQ Sauce, Pizza Sauce." 

    def get_cost(Pizza):
       return 129.99


 
class decorator(Pizza):                   #creating a superclass for toppings
    def __init__(self, pizza):            
        self.pizza = pizza
    
    def get_cost(self):                    #creating methods for topping names and prices
        return self.pizza.get_cost()
    
    def get_description(self):
        return self.pizza.get_description()

class Olives(decorator):                    #creating a subclass for each topping
    def __init__(self, pizza):
        super().__init__(pizza)
        self.cost = 5.99
        self.description = "Olives"
    
    def get_cost(self):                     #using the methods for each topping
        return self.pizza.get_cost() + self.cost
    
    def get_description(self):
        return self.pizza.get_description() + ", " + self.description

class Mushrooms(decorator):
    def __init__(self, pizza):
        super().__init__(pizza)
        self.cost = 5.99
        self.description = "Mushrooms"
    
    def get_cost(self):
        return self.pizza.get_cost() + self.cost
    
    def get_description(self):
        return self.pizza.get_description() + ", " + self.description
        
class GoatCheese(decorator):
    def __init__(self, pizza):
        super().__init__(pizza)
        self.cost = 7.99
        self.description = "Goat Cheese"
    
    def get_cost(self):
        return self.pizza.get_cost() + self.cost
    
    def get_description(self):
        return self.pizza.get_description() + ", " + self.description

class Meatballs(decorator):
    def __init__(self, pizza):
        super().__init__(pizza)
        self.cost = 19.99
        self.description = "Meatballs"
    
    def get_cost(self):
        return self.pizza.get_cost() + self.cost
    
    def get_description(self):
        return self.pizza.get_description() + ", " + self.description
        
class Onions(decorator): 
    def __init__(self, pizza):
        super().__init__(pizza)
        self.cost = 5.99
        self.description = "Onions"
    
    def get_cost(self):
        return self.pizza.get_cost() + self.cost
    
    def get_description(self):
        return self.pizza.get_description() + ", " + self.description

class Corn(decorator):
    def __init__(self, pizza):
        super().__init__(pizza)
        self.cost = 4.99
        self.description = "Corn"
    
    def get_cost(self):
        return self.pizza.get_cost() + self.cost
    
    def get_description(self):
        return self.pizza.get_description() + ", " + self.description




def main():                               #creating a main function for our ordering system

    file = open('Menu.txt','w')           #creating a menu file and typing the menu inside this file
    file.write('---MENU:\n1: Classic Pizza\n2: Margherita Pizza\n3: Meat Pizza\n4: BBQ Chicken Pizza\n---Toppings:\n1: Olives\n2: Mushrooms\n3: Goat Cheese\n4: Meatballs\n5: Onions\n6: Corn')
    file.close()
    file = open('Menu.txt', 'r')
    print(file.read())                    #printing the menu 

    print("Please select a Pizza.")
    pizza_choice = int(input())           #taking the pizza choice data from user

    pizza = None

    if pizza_choice == 1:                 #creating an if-else condition for each pizza type
         pizza = Classic()

    elif pizza_choice == 2:
         pizza = Margherita()

    elif pizza_choice == 3:
         pizza = Meat()

    elif pizza_choice == 4:
         pizza = BBQ()          
     
    else:
         print("Invalid choice")
         return


    while True:
         print("Please select a topping. Press 7 for exit.")

         topping_choice = int(input())              #taking the topping choice data from user
         if topping_choice == 1:                    #creating an if-else condition for each topping type
             pizza = Olives(pizza)

         elif topping_choice == 2:
             pizza = Mushrooms(pizza)
         
         elif topping_choice == 3:
             pizza = GoatCheese(pizza)   

         elif topping_choice == 4:
              pizza = Meatballs(pizza)

         elif topping_choice == 5:
              pizza = Onions(pizza)

         elif topping_choice == 6:
              pizza = Corn(pizza)              

         elif topping_choice == 7:
             break

         else:
             print("Invalid choice")


    print("Your pizza:", pizza.get_description())                      #calculating the total order
    print("Total cost: $","{:.2f}".format(pizza.get_cost()))           #calculating the total order's cost

    name = input("Please enter your name: ")                            #taking the personal data from user
    ID = input("Please enter your ID: ")
    kk_number = input("Please enter your credit card number: ")
    kk_password = input("Please enter your credit card password: ")
    
    print("Order time:", datetime.datetime.now(), "Thank you for ordering from us!")          #printing the order time



    with open("Orders_Database.csv", 'a') as file_csv:                      #entering the user's info and choices of pizza and topping to the database
        writer = csv.writer(file_csv)
        writer.writerow([datetime.datetime.now(), pizza.get_description(), pizza.get_cost(), name, ID, kk_number, kk_password])

main()                                                  #calling the main function for starting the order system